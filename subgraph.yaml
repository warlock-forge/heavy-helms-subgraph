specVersion: 1.2.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Player
    network: base-sepolia
    source:
      address: "0x0006A67Ca3F41885f42A42799406ea848c67f33f"
      abi: Player
      startBlock: 24119000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - AttributeSwapAwarded
        - CreatePlayerFeeUpdated
        - EquipmentRequirementsUpdated
        - GameContractPermissionsUpdated
        - NameChangeAwarded
        - OwnershipTransferred
        - PausedStateChanged
        - PlayerAttributesSwapped
        - PlayerAttributesUpdated
        - PlayerCreationRequested
        - PlayerImmortalityChanged
        - PlayerKillUpdated
        - PlayerNameUpdated
        - PlayerRetired
        - PlayerSkinEquipped
        - PlayerSlotsPurchased
        - PlayerWinLossUpdated
        - RequestedRandomness
        - SlotBatchCostUpdated
        # Add our custom entities
        - Player
        - Owner
        - Skin
      abis:
        - name: Player
          file: ./abis/Player.json
        - name: PlayerSkinNFT
          file: ./abis/PlayerSkinNFT.json
      eventHandlers:
        - event: AttributeSwapAwarded(indexed address,uint256)
          handler: handleAttributeSwapAwarded
        - event: CreatePlayerFeeUpdated(uint256,uint256)
          handler: handleCreatePlayerFeeUpdated
        - event: EquipmentRequirementsUpdated(indexed address,indexed address)
          handler: handleEquipmentRequirementsUpdated
        - event: GameContractPermissionsUpdated(indexed address,(bool,bool,bool,bool,bool))
          handler: handleGameContractPermissionsUpdated
        - event: NameChangeAwarded(indexed address,uint256)
          handler: handleNameChangeAwarded
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: PausedStateChanged(bool)
          handler: handlePausedStateChanged
        - event: PlayerAttributesSwapped(indexed uint32,uint8,uint8,uint8,uint8)
          handler: handlePlayerAttributesSwapped
        - event: PlayerAttributesUpdated(indexed uint32,uint8,uint8,uint8,uint8,uint8,uint8)
          handler: handlePlayerAttributesUpdated
        - event: PlayerCreationRequested(indexed uint256,indexed address)
          handler: handlePlayerCreationRequested
        - event: PlayerImmortalityChanged(indexed uint32,indexed address,bool)
          handler: handlePlayerImmortalityChanged
        - event: PlayerKillUpdated(indexed uint32,uint16)
          handler: handlePlayerKillUpdated
        - event: PlayerNameUpdated(indexed uint32,uint16,uint16)
          handler: handlePlayerNameUpdated
        - event: PlayerRetired(indexed uint32,indexed address,bool)
          handler: handlePlayerRetired
        - event: PlayerSkinEquipped(indexed uint32,indexed uint32,uint16,uint8)
          handler: handlePlayerSkinEquipped
        - event: PlayerSlotsPurchased(indexed address,uint8,uint8,uint256)
          handler: handlePlayerSlotsPurchased
        - event: PlayerWinLossUpdated(indexed uint32,uint16,uint16)
          handler: handlePlayerWinLossUpdated
        - event: RequestedRandomness(uint256,bytes)
          handler: handleRequestedRandomness
        - event: SlotBatchCostUpdated(uint256,uint256)
          handler: handleSlotBatchCostUpdated
        - event: PlayerCreationComplete(indexed uint256,indexed uint32,indexed address,uint256,uint16,uint16,uint8,uint8,uint8,uint8,uint8,uint8)
          handler: handlePlayerCreationComplete
        - event: StanceUpdated(indexed uint32,uint8)
          handler: handleStanceUpdated
        - event: VrfRequestTimeoutUpdated(uint256,uint256)
          handler: handleVrfRequestTimeoutUpdated
      file: ./src/player.ts

  - kind: ethereum
    name: PlayerNameRegistry
    network: base-sepolia
    source:
      address: "0x317d317165E80026dDB700E473C8CaA8de77F6b7"
      abi: PlayerNameRegistry
      startBlock: 24119000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - NameAdded
        - Name
      abis:
        - name: PlayerNameRegistry
          file: ./abis/PlayerNameRegistry.json
      eventHandlers:
        - event: NameAdded(uint8,uint16,string)
          handler: handleNameAdded
      file: ./src/name-registry.ts

  - kind: ethereum
    name: PlayerSkinRegistry
    network: base-sepolia
    source:
      address: "0x22db1b6B890175FA0853d7652060C55709c001C5"
      abi: PlayerSkinRegistry
      startBlock: 24119000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - SkinRegistered
        - SkinVerificationUpdated
        - SkinTypeUpdated
        - RequiredNFTUpdated
        - SkinCollection
      abis:
        - name: PlayerSkinRegistry
          file: ./abis/PlayerSkinRegistry.json
        - name: PlayerSkinNFT
          file: ./abis/PlayerSkinNFT.json
      eventHandlers:
        - event: SkinRegistered(indexed uint32,indexed address)
          handler: handleSkinRegistered
        - event: SkinVerificationUpdated(indexed uint32,bool)
          handler: handleSkinVerificationUpdated
        - event: SkinTypeUpdated(indexed uint32,uint8)
          handler: handleSkinTypeUpdated
        - event: RequiredNFTUpdated(indexed uint32,address)
          handler: handleRequiredNFTUpdated
      file: ./src/skin-registry.ts

  # Add DefaultPlayer data source
  - kind: ethereum
    name: DefaultPlayer
    network: base-sepolia
    source:
      address: "0xbd6Da864fc3a31C1aA8F27bbCDb5dc9BB0E2a51A"
      abi: DefaultPlayer
      startBlock: 24119000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - DefaultPlayer
        - DefaultPlayerCreated
        - DefaultPlayerStatsUpdated
      abis:
        - name: DefaultPlayer
          file: ./abis/DefaultPlayer.json
        - name: PlayerSkinNFT
          file: ./abis/PlayerSkinNFT.json
      eventHandlers:
        - event: DefaultPlayerCreated(indexed uint32,((uint8,uint8,uint8,uint8,uint8,uint8),(uint16,uint16),(uint32,uint16),uint8,(uint16,uint16,uint16)))
          handler: handleDefaultPlayerCreated
        - event: DefaultPlayerStatsUpdated(indexed uint32,((uint8,uint8,uint8,uint8,uint8,uint8),(uint16,uint16),(uint32,uint16),uint8,(uint16,uint16,uint16)))
          handler: handleDefaultPlayerStatsUpdated
      file: ./src/default-player.ts

  # Add Monster data source
  - kind: ethereum
    name: Monster
    network: base-sepolia
    source:
      address: "0x4EEF73d180651E97b9D18554456ab5608c159fC7"
      abi: Monster
      startBlock: 24119000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - Monster
        - MonsterCreated
        - MonsterStatsUpdated
        - MonsterWinLossUpdated
        - MonsterKillsUpdated
        - MonsterImmortalStatusUpdated
        - MonsterRetired
      abis:
        - name: Monster
          file: ./abis/Monster.json
        - name: PlayerSkinNFT
          file: ./abis/PlayerSkinNFT.json
      eventHandlers:
        - event: MonsterCreated(indexed uint32,((uint8,uint8,uint8,uint8,uint8,uint8),(uint16),(uint32,uint16),uint8,(uint16,uint16,uint16),uint8))
          handler: handleMonsterCreated
        - event: MonsterStatsUpdated(indexed uint32,((uint8,uint8,uint8,uint8,uint8,uint8),(uint16),(uint32,uint16),uint8,(uint16,uint16,uint16),uint8))
          handler: handleMonsterStatsUpdated
        - event: MonsterWinLossUpdated(indexed uint32,uint16,uint16)
          handler: handleMonsterWinLossUpdated
        - event: MonsterKillsUpdated(indexed uint32,uint16)
          handler: handleMonsterKillsUpdated
        - event: MonsterImmortalStatusUpdated(indexed uint32,bool)
          handler: handleMonsterImmortalStatusUpdated
        - event: MonsterRetired(indexed uint32,bool)
          handler: handleMonsterRetired
      file: ./src/monster.ts

  # Add MonsterNameRegistry data source if needed
  - kind: ethereum
    name: MonsterNameRegistry
    network: base-sepolia
    source:
      address: "0xF3BeBfA46037dA1B9819dB7AcE1a76a4F8b4a2C1"
      abi: MonsterNameRegistry
      startBlock: 24119000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - NameAdded
        - Name
      abis:
        - name: MonsterNameRegistry
          file: ./abis/MonsterNameRegistry.json
      eventHandlers:
        - event: NameAdded(indexed uint16,string)
          handler: handleMonsterNameAdded
      file: ./src/monster-name-registry.ts

  # Add DuelGame data source
  - kind: ethereum
    name: DuelGame
    network: base-sepolia
    source:
      address: "0xD50f3Ac0E0AC9b1356301a153a777dF1A985E42e"
      abi: DuelGame
      startBlock: 24119000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - DuelChallenge
        - ChallengeCreated
        - ChallengeAccepted
        - ChallengeCancelled
        - ChallengeForfeited
        - DuelComplete
        - CombatResult
        - FeesWithdrawn
        - MinDuelFeeUpdated
        - MinWagerAmountUpdated
        - GameEnabledUpdated
        - WagerFeePercentageUpdated
        - WagersEnabledUpdated
        - TimeUntilExpireUpdated
        - TimeUntilWithdrawUpdated
      abis:
        - name: DuelGame
          file: ./abis/DuelGame.json
      eventHandlers:
        - event: ChallengeCreated(indexed uint256,indexed uint32,indexed uint32,uint256,uint32,uint16,uint8)
          handler: handleChallengeCreated
        - event: ChallengeAccepted(indexed uint256,indexed uint32,uint32,uint16,uint8)
          handler: handleChallengeAccepted
        - event: ChallengeCancelled(indexed uint256)
          handler: handleChallengeCancelled
        - event: ChallengeForfeited(indexed uint256,uint256)
          handler: handleChallengeForfeited
        - event: DuelComplete(indexed uint256,indexed uint32,uint256,uint256,uint256)
          handler: handleDuelComplete
        - event: CombatResult(indexed bytes32,indexed bytes32,indexed uint32,bytes)
          handler: handleCombatResult
        - event: FeesWithdrawn(uint256)
          handler: handleFeesWithdrawn
        - event: MinDuelFeeUpdated(uint256,uint256)
          handler: handleMinDuelFeeUpdated
        - event: MinWagerAmountUpdated(uint256)
          handler: handleMinWagerAmountUpdated
        - event: GameEnabledUpdated(bool)
          handler: handleGameEnabledUpdated
        - event: WagerFeePercentageUpdated(uint256,uint256)
          handler: handleWagerFeePercentageUpdated
        - event: WagersEnabledUpdated(bool)
          handler: handleWagersEnabledUpdated
        - event: TimeUntilExpireUpdated(uint256,uint256)
          handler: handleTimeUntilExpireUpdated
        - event: TimeUntilWithdrawUpdated(uint256,uint256)
          handler: handleTimeUntilWithdrawUpdated
        - event: ChallengeRecovered(indexed uint256,uint256,uint256)
          handler: handleChallengeRecovered
        - event: GameEngineUpdated(indexed address,indexed address)
          handler: handleGameEngineUpdated
        - event: PlayerContractUpdated(indexed address,indexed address)
          handler: handlePlayerContractUpdated
      file: ./src/duel-game.ts

templates:
  - name: PlayerSkinNFT
    kind: ethereum/contract
    network: base-sepolia
    source:
      abi: PlayerSkinNFT
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/templates/player-skin-nft.ts
      entities:
        - Skin
      eventHandlers:
        - event: SkinMinted(indexed uint16,indexed uint8,indexed uint8)
          handler: handleSkinMinted
      abis:
        - name: PlayerSkinNFT
          file: ./abis/PlayerSkinNFT.json
  - name: GameOwnedNFT
    kind: ethereum/contract
    network: base-sepolia
    source:
      abi: GameOwnedNFT
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/templates/game-owned-nft.ts
      entities:
        - Skin
      eventHandlers:
        - event: SkinMinted(indexed uint16,indexed uint8,indexed uint8)
          handler: handleSkinMinted
        - event: CIDUpdated(indexed uint16,string)
          handler: handleCIDUpdated
        - event: SkinAttributesUpdated(indexed uint16,uint8,uint8)
          handler: handleSkinAttributesUpdated
      abis:
        - name: GameOwnedNFT
          file: ./abis/GameOwnedNFT.json